name: release

on:
  workflow_dispatch:

  push:
    branches:
      - corepack

jobs:
  build_desktop:
    name: Build desktop app for ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ macos-latest, ubuntu-24.04, windows-latest ]
    runs-on: ${{ matrix.platform }}
    env:
      TAURI_SIGNING_PRIVATE_KEY: "${{ secrets.TAURI_PRIVATE_KEY }}"
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: "${{ secrets.TAURI_KEY_PASSWORD }}"
      APPLE_CERTIFICATE: "${{ secrets.APPLE_CERTIFICATE }}"
      APPLE_CERTIFICATE_PASSWORD: "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}"
      APPLE_SIGNING_IDENTITY: "${{ secrets.APPLE_SIGNING_IDENTITY }}"
      APPLE_ID: "${{ secrets.APPLE_ID }}"
      APPLE_PASSWORD: "${{ secrets.APPLE_PASSWORD }}"
      APPLE_TEAM_ID: "${{ secrets.APPLE_TEAM_ID }}"

    steps:
      ### system setup

      - uses: actions/checkout@v4

      ### WINDOWS

      - uses: actions/setup-node@v4
        with:
          node-version: '22.5.1'
        if: matrix.platform == 'windows-latest'

      - run: corepack enable
        if: matrix.platform == 'windows-latest'

      - run: yarn
        if: matrix.platform == 'windows-latest'

      - run: rustup toolchain install stable
        if: matrix.platform == 'windows-latest'

      - name: windows > build
        run: yarn tauri:build
        if: matrix.platform == 'windows-latest'

      - name: windows > upload artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows_artifacts
          if-no-files-found: error
          path: |
            src-tauri/target/release/bundle/msi/elasticvue_*_x64*
            src-tauri/target/release/elasticvue.exe

      ### LINUX

      - name: linux > build
        run: make TAURI_SIGNING_PRIVATE_KEY="${{ secrets.TAURI_PRIVATE_KEY }}" TAURI_SIGNING_PRIVATE_KEY_PASSWORD="${{ secrets.TAURI_KEY_PASSWORD }}" build_docker_tauri
        if: matrix.platform == 'ubuntu-24.04'

      - name: linux > upload artifacts
        if: matrix.platform == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: linux_artifacts
          if-no-files-found: error
          path: |
            src-tauri/target/release/bundle/deb/elasticvue_*_amd64.deb
            src-tauri/target/release/bundle/appimage/elasticvue_*_amd64.*
            src-tauri/target/release/elasticvue
      
      ### MAC

      - uses: actions/setup-node@v4
        with:
          node-version: '22.5.1'
        if: matrix.platform == 'macos-latest'

      - run: corepack enable
        if: matrix.platform == 'macos-latest'

      - run: yarn
        if: matrix.platform == 'macos-latest'

      - run: rustup toolchain install stable
        if: matrix.platform == 'macos-latest'

      - name: mac > setup targets
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      #### build mac arm

      - name: mac aaarch64 > build
        run: yarn tauri:build --target aarch64-apple-darwin
        if: matrix.platform == 'macos-latest'

      - name: mac aaarch64 > rename artifacts
        if: matrix.platform == 'macos-latest'
        run: |
          mv src-tauri/target/aarch64-apple-darwin/release/bundle/macos/elasticvue.app.tar.gz src-tauri/target/aarch64-apple-darwin/release/bundle/macos/elasticvue_aarch64.app.tar.gz
          mv src-tauri/target/aarch64-apple-darwin/release/bundle/macos/elasticvue.app.tar.gz.sig src-tauri/target/aarch64-apple-darwin/release/bundle/macos/elasticvue_aarch64.app.tar.gz.sig

      - name: mac aaarch64 > upload artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: mac_aaarch64_artifacts
          if-no-files-found: error
          path: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/elasticvue_*_aarch64.dmg
            src-tauri/target/aarch64-apple-darwin/release/bundle/macos/elasticvue_aarch64*

      #### build mac x86_64

      - name: mac x86_64 > build
        run: yarn tauri:build --target x86_64-apple-darwin
        if: matrix.platform == 'macos-latest'

      - name: mac x86_64 > rename artifacts
        if: matrix.platform == 'macos-latest'
        run: |
          mv src-tauri/target/x86_64-apple-darwin/release/bundle/macos/elasticvue.app.tar.gz src-tauri/target/x86_64-apple-darwin/release/bundle/macos/elasticvue_x64.app.tar.gz
          mv src-tauri/target/x86_64-apple-darwin/release/bundle/macos/elasticvue.app.tar.gz.sig src-tauri/target/x86_64-apple-darwin/release/bundle/macos/elasticvue_x64.app.tar.gz.sig

      - name: mac x86_64 > upload artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: mac_x86_64_artifacts
          if-no-files-found: error
          path: |
            src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/elasticvue_*_x64.dmg
            src-tauri/target/x86_64-apple-darwin/release/bundle/macos/elasticvue_x64*


